general:
  auth:
    default: dev
project:
  name: quickstart-solodev-eks
  owner: help@solodev.com
  regions:
  - eu-north-1
  - me-south-1
  - us-east-1
<<<<<<< HEAD
  template: templates/solodev-eks-master-existing-vpc.template.yaml
=======
  - us-east-2
  - us-west-2
  template: templates/amazon-eks-master.template.yaml
>>>>>>> 8c6901fc180623dfff1b57b275e006a734bd1260
  parameters:
    RemoteAccessCIDR: 10.0.0.0/16
    QSS3BucketName: $[taskcat_autobucket]
    QSS3BucketRegion: $[taskcat_current_region]
<<<<<<< HEAD
    QSS3KeyPrefix: "quickstart-solodev-eks/"
    ProvisionBastionHost: Disabled
=======
>>>>>>> 8c6901fc180623dfff1b57b275e006a734bd1260
  lambda_source_path: functions/source
  lambda_zip_path: functions/packages
  build_submodules: true
tests:
  defaults:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
<<<<<<< HEAD
  # aws:
  #   parameters:
  #     AvailabilityZones: $[taskcat_genaz_3]
  #   template: templates/amazon-eks-master-existing-vpc.template.yaml
  #   regions:
  #       - us-east-1
  # cms:
  #   parameters:      
  #     WebStackArn: $[WebStackArn]
  #     HelmLambdaArn: $[HelmLambdaArn]
  #     ClusterName: $[ClusterName]
  #     AdminPassword: $[AdminPassword]
  #     DatabasePassword: $[DatabasePassword]
  #   template: templates/solodev-eks-cms.template.yaml
  #   regions:
  #       - us-east-1
  # token:
  #   parameters:
  #     WebStackArn: $[WebStackArn]
  #     ClusterName: $[ClusterName]
  #   template: templates/solodev-eks-token.template.yaml
  #   regions:
  #       - us-east-1
=======
      ProvisionBastionHost: Disabled
      EKSPublicAccessEndpoint: Enabled
  public-endpoint:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      EKSPublicAccessEndpoint: Disabled
      ProvisionBastionHost: Enabled
    regions:
      - ap-northeast-2
  cluster-autoscaler:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Enabled
      ProvisionBastionHost: Enabled
      EKSPublicAccessEndpoint: Disabled
    regions:
    - eu-central-1
  efs:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      EfsStorageClass: Enabled
      ClusterAutoScaler: Disabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      EKSPublicAccessEndpoint: Disabled
      ProvisionBastionHost: Enabled
    regions:
    - us-west-2
  efs-prov:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      EfsStorageClass: Enabled
      ClusterAutoScaler: Disabled
      EfsThroughputMode: provisioned
      EfsProvisionedThroughputInMibps: 100
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ap-east-1
  managed-node-group:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Disabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ap-south-1
  monitoring-prom-graf:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      MonitoringStack: Prometheus + Grafana
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ap-southeast-2
    - us-west-2
  2az:
    parameters:
      AvailabilityZones: $[taskcat_genaz_2]
      NumberOfAZs: "2"
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ca-central-1
    - cn-north-1
    - cn-northwest-1
  no-logging:
    parameters:
      AvailabilityZones: $[taskcat_genaz_2]
      NumberOfAZs: "2"
      EKSClusterLoggingTypes: ""
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - eu-west-1
  with-hybrid:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Disabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      MangedNodeGroupLabel: TestMNG
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - us-west-2
  alb-ingress:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ALBIngressController: Enabled
      EKSPublicAccessEndpoint: Disabled
      ProvisionBastionHost: Enabled
    regions:
    - us-east-2
  fargate:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Enabled
      FargateNamespaces: kube-system
      FargateLabels: 'app.kubernetes.io/name=aws-cluster-autoscaler'
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - us-east-1
  enable-oidc:
    regions:
      - eu-west-2
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      IamOidcProvider: Enabled
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
  snyk:
    regions:
      - eu-west-3
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ProvisionBastionHost: Disabled
      EKSPublicAccessEndpoint: Enabled
      SnykIntegration: Enabled
      SnykIntegrationId: ---overridden---
  new-relic:
    regions:
      - sa-east-1
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ProvisionBastionHost: Disabled
      EKSPublicAccessEndpoint: Enabled
      NewRelicIntegration: Enabled
      NewRelicLicenseKey: ---overridden---
  managed-node-group-ASC:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Enabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Enabled
    regions:
    - ap-south-1
>>>>>>> 8c6901fc180623dfff1b57b275e006a734bd1260
